import openai from "../lib/openai.js";



export const detectAIAndGenerateReport = async (text) => {
  const prompt = 
`
You are a highly advanced AI content analysis tool trained in detecting AI-generated text, plagiarism, and duplication. Given a student's assignment below, provide a detailed report covering the following:

1. **AI-Generated or Human-Written?**
   - Determine if the text appears to be generated by an AI (e.g., ChatGPT or other LLMs), or if it is likely human-written.
   - Justify your answer with indicators such as sentence uniformity, repetition, unnatural coherence, lack of personal insights, overly generic explanations, etc.

2. **Plagiarism Check**
   - Analyze the text for any potential signs of plagiarism (copied from known sources or commonly used templates).
   - Mention if the content appears copied from textbooks, articles, or previously seen patterns.

3. **Duplication Among Submissions**
   - Assume this assignment is part of a larger group of student submissions.
   - Check for signs of duplication or paraphrased repetition of content likely shared among multiple students.
   - Provide clues or lines that raise suspicion.

4. **Summary of Analysis**
   - Provide a brief but insightful summary of your analysis.
   - Highlight what led you to your conclusions and what aspects of the content stood out.

5. **Grading and Scoring**
   - Provide a suggested percentage grade out of 100 based on originality, coherence, insightfulness, and likelihood of genuine authorship.
   - Use a clear scale: e.g., 90–100% = excellent and original, 70–89% = good but with signs of assistance, below 70% = likely AI or copied.

### Important Instructions:
- Avoid generic responses—focus on *specific patterns* in the writing.
- Use linguistic clues (e.g., unnatural fluency, vague repetition, shallow reasoning).
- If the text is too short or lacks sufficient evidence, mention this clearly.
- Be critical but fair in your evaluation.

### Student Assignment Text:

Text:
${text.substring(0, 3500)}
`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: prompt }],
    });

    return completion.choices[0]?.message?.content ?? "No response from OpenAI.";
  } catch (error) {
    if (error.status === 429) {
      return "Error 429: Quota exceeded. Please check your OpenAI billing/account limits.";
    } else if (error.status) {
      return `API Error: ${error.status} - ${error.message}`;
    }
    return `Unexpected error: ${error.message}`;
  }
};
